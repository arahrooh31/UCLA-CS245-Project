preds.svm
sum(preds.svm)
table(preds.svm)
svm.cv
svm.tune <- tune(svm, as.factor(y) ~ ., data=data, kernel='linear',
ranges=list(cost=c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
svm.best <- svm.tune$best.model
preds.svm <- predict(svm.best, data)
svm.tune
summary(svm.tune)
svm.tune <- tune(svm, y ~ ., data=data, kernel='linear',
ranges=list(cost=c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
svm.best <- svm.tune$best.model
preds.svm <- predict(svm.best, data)
table(preds.svm)
y <- as.factor(1 * (x1^2 - x2^2 > 0))
# (b)
plot(x1, x2, pch=y, col=y+1)
y <- 1 * (x1^2 - x2^2 > 0)
# (b)
plot(x1, x2, pch=y, col=y+1)
# (c)
logist <- glm(y ~ x1 + x2, family='binomial')
# (d)
data <- data.frame(x1, x2, y)
probs <- predict(logist, df, type='response')
preds <- ifelse(probs > .5, 1, 0)
plot(x1, x2, pch=preds, col=preds+1)
# (a)
set.seed(1)
x1 <- runif(500) - 0.5
x2 <- runif(500) - 0.5
y <- 1 * (x1^2 - x2^2 > 0)
# (b)
plot(x1, x2, pch=y, col=y+1)
# (c)
logist <- glm(y ~ x1 + x2, family='binomial')
# (d)
data <- data.frame(x1, x2, y)
probs <- predict(logist, df, type='response')
probs <- predict(logist, data, type='response')
preds <- ifelse(probs > .5, 1, 0)
plot(x1, x2, pch=preds, col=preds+1)
# (e)
logist.nl <- glm(y ~ I(x1^2) + I(x2^2) + x1:x2 + log(x2+0.5), family='binomial')
# (f)
probs.nl <- predict(logist.nl, data, type='response')
preds.nl <- ifelse(probs.nl > .5, 1, 0)
plot(x1, x2, pch=preds.nl, col=preds.nl+1)
svm.tune <- tune(svm, as.facotr(y) ~ ., data=data, kernel='linear',
ranges=list(cost=c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
svm.tune <- tune(svm, as.factor(y) ~ ., data=data, kernel='linear',
ranges=list(cost=c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
svm.best <- svm.tune$best.model
preds.svm <- predict(svm.best, data)
table(preds.svm)
plot(x1, x2, pch=preds.svm, col=preds.svm+1)
preds.svm.num <- as.numeric(preds.svm)
plot(x1, x2, pch=preds.svm, col=preds.svm+1)
head preds.svm
head(preds.svm)
head(preds.svm.num)
as.factor(c(0,1,0,1))
as.numeric(as.factor(c(0,1,0,1)))
as.integer(as.factor(c(0,1,0,1)))
preds.svm.num <- as.integer(preds.svm)
plot(x1, x2, pch=preds.svm.num-1, col=preds.svm.num)
# (b)
plot(x1, x2, pch=y, col=y+1)
# (c)
logist <- glm(y ~ x1 + x2, family='binomial')
# (d)
data <- data.frame(x1, x2, y)
probs <- predict(logist, data, type='response')
preds <- ifelse(probs > .5, 1, 0)
plot(x1, x2, pch=preds, col=preds+1)
# (e)
logist.nl <- glm(y ~ I(x1^2) + I(x2^2) + x1:x2 + log(x2+0.5), family='binomial')
# (f)
probs.nl <- predict(logist.nl, data, type='response')
preds.nl <- ifelse(probs.nl > .5, 1, 0)
plot(x1, x2, pch=preds.nl, col=preds.nl+1)
# (g)
library(e1071)
svm.tune <- tune(svm, as.factor(y) ~ ., data=data, kernel='linear',
ranges=list(cost=c(0.001, 0.01, 0.1, 1, 5, 10, 100)))
svm.best <- svm.tune$best.model
preds.svm <- predict(svm.best, data)
preds.svm.num <- as.integer(preds.svm)
plot(x1, x2, pch=preds.svm.num-1, col=preds.svm.num)
# (d)
data <- data.frame(x1, x2, y)
probs <- predict(logist, data, type='response')
preds <- ifelse(probs > .5, 1, 0)
plot(x1, x2, pch=preds)#, col=preds+1)
# (b)
plot(x1, x2, col=y+1)#pch=y, col=y+1)
plot(x1, x2, col=preds.nl)#+1)
plot(x1, x2, col=preds.nl+1)
plot(x1, x2, col=preds.svm.num)
# (h)
svm.nl.tune <- tune(svm, as.factor(y) ~ ., data=data, kernel='radial',
ranges=list(cost=c(0.001, 0.01, 0.1, 1, 5, 10, 100),
gamma=c(0.5, 1, 2, 3, 4)))
svm.nl.best <- svm.nl.tune$best.model
preds.svm.nl <- predict(svm.nl.best, data)
preds.svm.nl.num <- as.integer(preds.svm.nl)
plot(x1, x2, col=preds.svm.nl.num)
# (b)
plot(x1, x2, col=y+1)
source("~/Documents/code/ken_ds/assignment_8.R", echo=TRUE)
# (b)
plot(x1, x2, col=y+1)
plot(x1, x2, col=preds.nl+1)
?glm
#logist <- glm(y ~ x1 + x2, family='binomial')
logist <- glm(y ~ ., family='binomial', data)
# (d)
probs <- predict(logist, data, type='response')
preds <- ifelse(probs > .5, 1, 0)
plot(x1, x2, col=preds+1)
#logist <- glm(y ~ x1 + x2, family='binomial')
logist <- glm(y ~ ., 'binomial', data)
# (d)
probs <- predict(logist, data, type='response')
preds <- ifelse(probs > .5, 1, 0)
plot(x1, x2, col=preds+1)
# (e)
logist.nl <- glm(y ~ I(x1^2) + I(x2^2) + x1:x2 + log(x2+0.5), 'binomial', data)
# (f)
probs.nl <- predict(logist.nl, data, type='response')
preds.nl <- ifelse(probs.nl > .5, 1, 0)
plot(x1, x2, col=preds.nl+1)
logist <- glm(y ~ ., 'binomial', data)
table(preds.nl)
table(preds)
table(y)
table(preds, y)
summary(logist.nl)
summary(svm.nl)
summary(svm.nl.tune)
summary(svm.tune)
summary(logist.nl)
table(preds.svm.nl.num-1, y)
plot(x1, x2, col=preds.svm.nl.num)
# (b)
plot(x1, x2, col=y+1)
plot(x1, x2, col=preds.svm.nl.num)
source("~/Documents/code/ken_ds/assignment_8.R", echo=TRUE)
plot(x1, x2, col=preds+1)
# (b)
plot(x1, x2, col=y+1)
plot(x1, x2, col=preds.svm.nl.num)
table(preds.svm.nl.num-1, y)
table(preds.logist.nl, y)
table(preds.nl, y)
ls
ls()
setwd('/Users/scott/Google Drive/My Drive/UCLA/CS245/COVID DGNN KG/Data/Location_feature_matrix_per_day')
View(read.csv('2021-10-04_feature_matrix.csv'))
setwd('~/Downloads')
View(read.csv('ak.csv'))
source("/Volumes/GoogleDrive/My Drive/UCLA/CS245/project/weather_analysis.r", echo=TRUE)
source("/Volumes/GoogleDrive/My Drive/UCLA/CS245/project/weather_analysis.r", echo=TRUE)
source("/Volumes/GoogleDrive/My Drive/UCLA/CS245/project/weather_analysis.r", echo=TRUE)
str(data)
data
rename(data, awnd = Wind)
rename(data, AWND = Wind)
?select
data <- read_csv('ak.csv') %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
RENAME(Station=STATION, Date=DATE, Wind=AWND, Snow=SNOW, Temperature=TAVG, Precipitation=PRCP)
data <- read_csv('ak.csv') %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Wind=AWND, Snow=SNOW, Temperature=TAVG, Precipitation=PRCP)
data
data %>%
group_by(Station) %>%
summarize(W=sum(is.na(Wind)))
data %>%
group_by(Station) %>%
summarize(W=sum(is.na(Wind)), N=nrow(Wind))
data %>%
group_by(Station) %>%
summarize(W=sum(is.na(Wind)), N=nrow(Wind))
data %>%
group_by(Station) %>%
summarize(W=sum(is.na(Wind)), N=length(Wind))
data %>%
filter(Station=='CA001206197')
View(data %>%
filter(Station=='CA001206197'))
data %>%
group_by(Station) %>%
summarize(W=sum(!is.na(Wind)), N=length(Wind))
data %>%
group_by(Station) %>%
summarize(W=sum(!is.na(Wind)), N=length(Wind)) %>%
sort(W, decreasing=T)
data %>%
group_by(Station) %>%
summarize(W=sum(!is.na(Wind)), N=length(Wind)) %>%
arrange(desc(W))
View(data %>%
filter(Station=='USS0045L01S'))
data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow))) %>%
arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete[[1]]
most_complete[1,1]
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[1,1]
data %>%
filter(Station==most_complete_station)
}
parse('ok')
parse('oh')
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[1,1]
return (data %>%
filter(Station==most_complete_station))
}
parse('oh')
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[1,1]
return most_complete_station
return (data %>%
filter(Station==most_complete_station))
}
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[1,1]
return(most_complete_station)
# return (data %>%
#   filter(Station==most_complete_station))
}
parse('oh')
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[1,1]
return(data %>%
filter(Station==most_complete_station))
}
parse('oh')
return(data)
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[1,1]
return(data)
return(data %>%
filter(Station==most_complete_station))
}
parse('oh')
parse('oh') %>% filter(Station=='USW00014820')
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[1,1]
# return(data)
return(data %>%
filter(Station==most_complete_station))
}
parse('oh')
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[1,1]
# return(data)
return(filter(data, Station==most_complete_station))
}
parse('oh')
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[1,1]
# return(data)
return(filter(data, Station=='USW00014820'))#most_complete_station))
}
parse('oh')
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- 'USW00014820'#by_completeness[1,1]
# return(data)
return(filter(data, Station==most_complete_station))
}
parse('oh')
parse <- function(state) {
data <- read_csv(str_glue('{state}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[[1,1]]
# return(data)
return(filter(data, Station==most_complete_station))
}
parse('oh')
parse('oh')
states <- c('AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY')
tolower('AB')
parse <- function(state) {
data <- read_csv(str_glue('{tolower(state)}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[[1,1]]
return(data %>%
filter(Station==most_complete_station) %>%
remove(Station) %>%
mutate(State=state)
)
}
states <- c('AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY')
parse('oh')
parse <- function(state) {
data <- read_csv(str_glue('{tolower(state)}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[[1,1]]
return(data %>%
filter(Station==most_complete_station) %>%
select(-Station) %>%
mutate(State=state)
)
}
states <- c('AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY')
parse('oh')
parse('OH')
parse <- function(state) {
data <- read_csv(str_glue('{tolower(state)}.csv')) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[[1,1]]
return(data %>%
filter(Station==most_complete_station) %>%
select(-Station) %>%
add_column(State=state, .before=1)
)
}
parse('OH')
parse('AL')
parse('AK')
parse('AZ')
parse('AR')
parse('CO')
parse('CO')
View(parse('CO'))
states[1:2]
apply(states[1:2], parse)
?apply
apply(states[1:2], FUN=parse)
apply(states[1:2], 1, FUN=parse)
dim(states[1:2])
sapply(states[1:2], FUN=parse)
parse('AL')
parse('AK')
bind_rows(parse('AL'), parse('AK'))
?reduce
reduce(states[2:3], function(acc, state) bind_rows(acc, parse(state)), .init=parse(states[1]))
states[10:-1]
states[10:]
states
states[-1]
reduce(states[-1],
function(acc, state) bind_rows(acc, parse(state)),
.init=parse(states[1]))
data <- reduce(states[-1],
function(acc, state) bind_rows(acc, parse(state)),
.init=parse(states[1]))
parse <- function(state) {
data <- read_csv(str_glue('{tolower(state)}.csv'), col_types=cols()) %>%
select(STATION, DATE, AWND, SNOW, TAVG, PRCP) %>%
rename(Station=STATION, Date=DATE, Temperature=TAVG, Wind=AWND, Precipitation=PRCP, Snow=SNOW)
by_completeness <- data %>%
group_by(Station) %>%
summarize(Temperature=sum(!is.na(Temperature)), Wind=sum(!is.na(Wind)), Precipitation=sum(!is.na(Precipitation)), Snow=sum(!is.na(Snow)), Total=sum(Temperature+Wind+Precipitation+Snow)) %>%
# arrange(desc(Temperature), desc(Wind), desc(Precipitation), desc(Snow))
arrange(desc(Total))
most_complete_station <- by_completeness[[1,1]]
return(data %>%
filter(Station==most_complete_station) %>%
select(-Station) %>%
add_column(State=state, .before=1)
)
}
states <- c('AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','OR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY')
data <- reduce(states[-1],
function(acc, state) bind_rows(acc, parse(state)),
.init=parse(states[1]))
nrow(data)
quantile(c(1.2,2,2,3.2,4.4,4.5,2.5,6.7,8.9,4.8), 0:3/3)
ntile(c(1.2,2,2,3.2,4.4,4.5,2.5,6.7,8.9,4.8), 3)
?ntile
temperature_tertiles <- quantile(data$Temperature, 0:3/3)
temperature_tertiles <- quantile(data$Temperature, 0:3/3, na.rm=T)
wind_tertiles <- quantile(data$Wind, 0:3/3, na.rm=T)
precipitation_median <- quantile(data$Precipitation, 0:2/2, na.rm=T)
snow_median <- quantile(data$Snow, 0:2/2, na.rm=T)
data.discretized <- data %>%
mutate(Temperature=ntile(Temperature, 3))
data.discretized
table(data.discretized$Temperature)
data.discretized <- data %>%
mutate(Temperature=ntile(Temperature, 3),
Wind=ntile(Wind, 3),
Precipitation=ntile(Precipitation, 2),
Snow=ntile(Snow, 2)
)
data.discretized
